@model AddressModel
@if (Model.CountryEnabled && Model.StateProvinceEnabled)
{
    <script type="text/javascript">
        $(document).ready(function () {

  //JXzfl
            $("#@Html.FieldIdFor(model => model.StateProvinceId)").change(function () {
                var selectedItem = $(this).val();
                var ddlCitys = $("#@Html.FieldIdFor(model => model.CityId)");
                var estimateProgress = $("#estimate-shipping-loading-progress");
                estimateProgress.show();
                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@(Url.RouteUrl("GetCitysByStateProvinceId"))",
                    data: { "stateProvinceId": selectedItem, "addSelectCityItem": "false" },
                    success: function (data) {
                        ddlCitys.html('');
                        $.each(data, function (id, option) {
                            ddlCitys.append($('<option></option>').val(option.id).html(option.name));
                        });
                        estimateProgress.hide();

                        $("#@Html.FieldIdFor(model => model.CityId)").change();

                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve states.');
                        estimateProgress.hide();
                    }
                });
            });

            $("#@Html.FieldIdFor(model => model.CityId)").change(function () {
                var selectedItem = $(this).val();
                var ddlCountys = $("#@Html.FieldIdFor(model => model.CountyId)");
                var estimateProgress = $("#estimate-shipping-loading-progress");
                estimateProgress.show();
                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@(Url.RouteUrl("GetCountysByCityId"))",
                    data: { "cityId": selectedItem, "addSelectCountyItem": "false" },
                    success: function (data) {
                        ddlCountys.html('');
                        $.each(data, function (id, option) {
                            ddlCountys.append($('<option></option>').val(option.id).html(option.name));
                        });
                        estimateProgress.hide();
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve states.');
                        estimateProgress.hide();
                    }
                });
            });
        });
    </script>
}
@Html.HiddenFor(model => model.Id)
@Html.HiddenFor(model => model.FirstNameEnabled)
@Html.HiddenFor(model => model.FirstNameRequired)
@Html.HiddenFor(model => model.LastNameEnabled)
@Html.HiddenFor(model => model.LastNameRequired)
@Html.HiddenFor(model => model.EmailEnabled)
@Html.HiddenFor(model => model.EmailRequired)
@Html.HiddenFor(model => model.CompanyEnabled)
@Html.HiddenFor(model => model.CompanyRequired)
@Html.HiddenFor(model => model.CountryEnabled)
@Html.HiddenFor(model => model.StateProvinceEnabled)
@Html.HiddenFor(model => model.CityEnabled)
@Html.HiddenFor(model => model.CityRequired)
@Html.HiddenFor(model => model.StreetAddressEnabled)
@Html.HiddenFor(model => model.StreetAddressRequired)
@Html.HiddenFor(model => model.StreetAddress2Enabled)
@Html.HiddenFor(model => model.StreetAddress2Required)
@Html.HiddenFor(model => model.ZipPostalCodeEnabled)
@Html.HiddenFor(model => model.ZipPostalCodeRequired)
@Html.HiddenFor(model => model.PhoneEnabled)
@Html.HiddenFor(model => model.PhoneRequired)
@Html.HiddenFor(model => model.FaxEnabled)
@Html.HiddenFor(model => model.FaxRequired)
<table class="address-block">
    @if (Model.FirstNameEnabled)
    {
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.FirstName):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.FirstName)
                @Html.ValidationMessageFor(model => model.FirstName)
            </td>
        </tr>
    }
    @if (Model.LastNameEnabled)
    {
        @*<tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.LastName):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.LastName)
                @Html.ValidationMessageFor(model => model.LastName)
            </td>
        </tr>*@
    }
    @if (Model.EmailEnabled)
    {
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.Email):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.Email)
                @Html.ValidationMessageFor(model => model.Email)
            </td>
        </tr>
    }
    @*@if (Model.CompanyEnabled)
    {
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.Company):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.Company)
                @Html.ValidationMessageFor(model => model.Company)
            </td>
        </tr>
    }
    @if (Model.CountryEnabled)
    {
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.CountryId):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.CountryId, Model.AvailableCountries)
                @Html.ValidationMessageFor(model => model.CountryId)
            </td>
        </tr>
    }*@
    @if (Model.CountryEnabled && Model.StateProvinceEnabled)
    {
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.StateProvinceId):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.StateProvinceId, Model.AvailableStates)
                @Html.ValidationMessageFor(model => model.StateProvinceId)
            </td>
        </tr>
    }
    <tr>
        <td class="adminTitle">
            @Html.NopLabelFor(model => model.CityId):
        </td>
        <td class="adminData">
          @Html.DropDownListFor(model => model.CityId, Model.AvailableCity)
            <span id="estimate-shipping-loading-progress" style="display: none;" class="please-wait">@T("Common.Wait...")</span>
        </td>
    </tr> 
    <tr>
        <td class="adminTitle">
            @Html.NopLabelFor(model => model.CountyId):
        </td>
        <td class="adminData">
            @Html.DropDownListFor(model => model.CountyId, Model.AvailableCounty )
            <span id="estimate-shipping-loading-progress" style="display: none;" class="please-wait">@T("Common.Wait...")</span>
        </td>
    </tr> 
    @*@if (Model.CityEnabled)
    {
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.City):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.City)
                @Html.ValidationMessageFor(model => model.City)
            </td>
        </tr>
    }*@
    @if (Model.StreetAddressEnabled)
    {
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.Address1):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.Address1)
                @Html.ValidationMessageFor(model => model.Address1)
            </td>
        </tr>
    }
    @*@if (Model.StreetAddress2Enabled)
    {
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.Address2):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.Address2)
                @Html.ValidationMessageFor(model => model.Address2)
            </td>
        </tr>
    }
    @if (Model.ZipPostalCodeEnabled)
    {
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.ZipPostalCode):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.ZipPostalCode)
                @Html.ValidationMessageFor(model => model.ZipPostalCode)
            </td>
        </tr>
    }*@
    @if (Model.PhoneEnabled)
    {
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.PhoneNumber):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.PhoneNumber)
                @Html.ValidationMessageFor(model => model.PhoneNumber)
            </td>
        </tr>
    }
    @*@if (Model.FaxEnabled)
    {
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.FaxNumber):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.FaxNumber)
                @Html.ValidationMessageFor(model => model.FaxNumber)
            </td>
        </tr>
    }*@
    @if (Model.CustomAddressAttributes.Count > 0)
    {
        @Html.Partial("_AddressAttributes", Model.CustomAddressAttributes)
    }
</table>